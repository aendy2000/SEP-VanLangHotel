@model List<SEP_VanLangHotel.Models.Nhan_Than>
@using SEP_VanLangHotel.Models;
@{ SEP25Team09Entities models = new SEP25Team09Entities();
    var phong = Session["thongtinphong"] as Phong;
    var ttdatPhong = Session["thongtindatphong"] as TT_Dat_Phong;

    var maLoaiPhong = phong.Ma_Loai_Phong;
    var dsTienIch = models.DS_Tien_Ich.Where(t => t.Ma_Loai_Phong.Equals(maLoaiPhong)).ToList();
    string dsTienIchs = "";
    foreach (var item in phong.Loai_Phong.DS_Tien_Ich)
    {
        dsTienIchs += item.Tien_Ich.Ten_Tien_Ich + "; ";
    }
}
@{
    ViewBag.Title = "CHI TIẾT PHÒNG ĐANG CHO THUÊ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (!Session["error-import-file"].Equals("empthy"))
{
    <body onload="kiemtrafileimport()">
    </body>
    <script>
        let info = @Html.Raw(Json.Encode(Session["error-import-file"]));
        function kiemtrafileimport() {
            cuteAlert({
                type: "error",
                title: "Thông báo!",
                message: info,
                buttonText: "Xác nhận"
            })
        }
    </script>
    Session["error-import-file"] = "empthy";
}
else if (!Session["thongbaoSuccess"].Equals("empthy"))
{
    <body onload="kiemtrafileimport()">
    </body>
    <script>
        let info = @Html.Raw(Json.Encode(Session["thongbaoSuccess"]));
        function kiemtrafileimport() {
            cuteAlert({
                type: "Success",
                title: "Thông báo!",
                message: info,
                buttonText: "Xác nhận"
            })
        }
    </script>
    Session["thongbaoSuccess"] = "empthy";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<style>
    input[readonly] {
        background-color: #EEEEEE;
        color: #333333;
        font-size: 14px;
        border-color: #FF7F00;
        padding: .6rem 1rem;
        height: inherit !important;
    }
</style>

<div class="panel-header bg-primary-gradient">
    <div class="page-inner py-5">
        <div class="d-flex align-items-left align-items-md-center flex-column flex-md-row">
            <div>
                <h2 class="text-white pb-2 fw-bold">THÔNG TIN ĐẶT PHÒNG</h2>
            </div>
        </div>
    </div>
</div>

<div class="page-inner mt--5">
    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body text-center">
                    <p style="width: 100%; font-style: italic; margin-top:0.1rem ">Phòng đang @phong.Trang_Thai.Ten_Trang_Thai </p>
                    <br>
                    <img src="@phong.Hinh_Anh" alt="avatar"
                         style="border-radius:3%; width:100%" class="img-room-profile mb-2">
                    <p></p>
                    <h2 class="btn btn-danger" style="font-weight:bold; width:100%; margin-top:1rem"> @phong.So_Phong </h2>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Loại Phòng</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.Ten_Loai_Phong</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Giá</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.Gia.ToString("0,0") VND</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Chứa Tối Đa</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@(phong.Loai_Phong.So_Nguoi_Lon + phong.Loai_Phong.So_Tre_Em) người</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Số Giường</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.So_Giuong giường</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Tiện ích</p>
                        </div>
                        <div class="col-sm-9">

                            <p class="text-muted mb-0">@dsTienIchs.Substring(0, (dsTienIchs.Length - 2))</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Mô Tả</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.Mo_Ta</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <p style="text-align:center; font-weight:bold; font-size:16px; color: orangered;">THÔNG TIN ĐẶT PHÒNG VÀ THANH TOÁN</p>
                    <div class="row gx-3 mb-3">

                        @if (string.IsNullOrEmpty(ttdatPhong.Ma_Tour))
                        {
                            <div class="col-md-4">
                                <label class="small mb-1">Thời gian đặt</label>
                                <p style="color:black; background-color:#EEEEEE" class="form-control">@Convert.ToDateTime(Session["thoigian-den"])</p>
                                @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                            </div>
                        }
                        else
                        {
                            string matours = ttdatPhong.Ma_Tour;
                            <div class="col-md-4">
                                <label class="small mb-1">Thời gian đặt</label>
                                <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_DatPhong_Coc.Value</p>
                                @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                            </div>
                        }

                        <div class="col-md-4">
                            <label class="small mb-1">Người lớn</label>
                            <p style="color: black; background-color: #EEEEEE" min="1" max="4" class="form-control">@Session["songuoi-lon"] người</p>
                            @*<input hidden name="soNguoiLon" value="@Session["songuoi-lon"]" style="color:black" type="number" min="1" max="4" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy nhập số lượng người lớn tối đa 4 người')" oninput="this.setCustomValidity('')">*@
                        </div>
                        @if (string.IsNullOrEmpty(ttdatPhong.Ma_Tour))
                        {
                            <div class="col-md-4">
                                <label class="small mb-1">Tổng thanh toán</label>
                                <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @phong.Loai_Phong.Gia.ToString("0,0") &ensp;×&ensp; @(Convert.ToInt32(Convert.ToDateTime(Session["thoigian-ve"].ToString()).Subtract(Convert.ToDateTime(Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy/MM/dd"))).TotalDays + 1)) &ensp;ngày&ensp; = &ensp; @(Convert.ToDecimal(Session["tong-thanhtoan"].ToString()).ToString("0,0")) &emsp; VND</p>
                                @*<input name="tongtien" type="text" class="hidden" hidden="hidden" value="@(Convert.ToDecimal(Session["tong-thanhtoan"].ToString()).ToString("0,0"))" />*@
                            </div>
                        }
                        else
                        {
                            string matours = ttdatPhong.Ma_Tour;
                            <div class="col-md-4">
                                <label class="small mb-1">Tổng thanh toán</label>
                                <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @phong.Loai_Phong.Gia.ToString("0,0") &ensp;×&ensp; @(Convert.ToInt32(Convert.ToDateTime(models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_TraPhong.Value.ToString("dd/MM/yyyy")).Subtract(Convert.ToDateTime(models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_NhanPhong.Value.ToString("dd/MM/yyyy"))).TotalDays + 1)) &ensp;ngày&ensp; = &ensp; @(Convert.ToDecimal(Session["tong-thanhtoan"].ToString()).ToString("0,0")) &emsp; VND</p>
                                @*<input name="tongtien" type="text" class="hidden" hidden="hidden" value="@(Convert.ToDecimal(Session["tong-thanhtoan"].ToString()).ToString("0,0"))" />*@
                            </div>
                        }

                    </div>
                    <div class="row gx-3 mb-3">

                        @if (string.IsNullOrEmpty(ttdatPhong.Ma_Tour))
                        {
                            <div class="col-md-4">
                                <label class="small mb-1">Trả phòng sau ngày</label>
                                <p style="color: black; background-color: #EEEEEE" type="text" class="form-control">@Convert.ToDateTime(Session["thoigian-ve"]).ToString("dd/MM/yyyy")</p>
                                @*<input hidden name="ngayVe" value="@Convert.ToDateTime(Session["thoigian-ve"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đi')" oninput="this.setCustomValidity('')">*@
                            </div>
                        }
                        else
                        {
                            string matours = ttdatPhong.Ma_Tour;
                            <div class="col-md-4">
                                <label class="small mb-1">Nhận phòng ngày</label>
                                <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_NhanPhong.Value.ToString("dd/MM/yyyy")</p>
                                @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                            </div>
                        }

                        <div class="col-md-4">
                            <label class="small mb-1">Trẻ em (dưới 14 tuổi)</label>
                            <p style="color: black; background-color: #EEEEEE" min="0" max="4" class="form-control">@Session["songuoi-treem"] người</p>
                            @*<input hidden name="soTreEm" value="@Session["songuoi-treem"]" style="color:black" type="number" min="0" max="4" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy nhập số lượng trẻ em tối đa 4 người')" oninput="this.setCustomValidity('')">*@
                        </div>
                        <div class="col-md-4">
                            <label class="small mb-1">Số tiền cọc</label>
                            <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @((Convert.ToInt64(Session["tong-coc"]).ToString("0,0"))) &emsp; VND</p>
                            @*<input type="text" id="testinput" value="@((Convert.ToInt64(Session["tong-coc"]).ToString("0,0")).Replace(".",","))" maxlength="@((Convert.ToDecimal(Session["tong-thanhtoan"])).ToString("0,0").Length)" style="text-align: center; font-weight: bold; color:red" class="form-control" name="tienCoc" required="required" />*@
                        </div>
                    </div>
                    <div class="row gx-3 mb-3">
                        @if (string.IsNullOrEmpty(ttdatPhong.Ma_Tour))
                        {
                            if (ttdatPhong.Trang_Thai == 1)
                            {
                                <div class="col-md-8">
                                    <label class="small mb-1">Thời gian trả phòng</label>
                                    <p style="color: black;text-align:center; background-color: #EEEEEE" type="text" class="form-control">@ttdatPhong.Thoi_Gian_ThanhToan.Value</p>
                                    @*<input hidden name="ngayVe" value="@Convert.ToDateTime(Session["thoigian-ve"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đi')" oninput="this.setCustomValidity('')">*@
                                </div>
                                <div class="col-md-4">
                                    <label class="small mb-1">Cần thanh toán</label>
                                    <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @((Convert.ToDecimal(Session["tong-thanhtoan"].ToString()) - Convert.ToDecimal(Session["tong-coc"].ToString())).ToString("0,0")) &emsp; VND</p>
                                    @*<input type="text" id="testinput" value="@((Convert.ToInt64(Session["tong-coc"]).ToString("0,0")).Replace(".",","))" maxlength="@((Convert.ToDecimal(Session["tong-thanhtoan"])).ToString("0,0").Length)" style="text-align: center; font-weight: bold; color:red" class="form-control" name="tienCoc" required="required" />*@
                                </div>
                            }
                            else if (ttdatPhong.Trang_Thai == 0)
                            {
                                <div class="col-md-12">
                                    <label class="small mb-1">Cần thanh toán</label>
                                    <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @((Convert.ToDecimal(Session["tong-thanhtoan"].ToString()) - Convert.ToDecimal(Session["tong-coc"].ToString())).ToString("0,0")) &emsp; VND</p>
                                    @*<input type="text" id="testinput" value="@((Convert.ToInt64(Session["tong-coc"]).ToString("0,0")).Replace(".",","))" maxlength="@((Convert.ToDecimal(Session["tong-thanhtoan"])).ToString("0,0").Length)" style="text-align: center; font-weight: bold; color:red" class="form-control" name="tienCoc" required="required" />*@
                                </div>
                            }

                        }
                        else
                        {
                            string matours = ttdatPhong.Ma_Tour;
                            if (models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Trang_Thai == 0)
                            {
                                if (ttdatPhong.Trang_Thai == 0)
                                {
                                    <div class="col-md-8">
                                        <label class="small mb-1">Trả phòng sau ngày</label>
                                        <p style="color:black; background-color:#EEEEEE; text-align:center;" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_TraPhong.Value.ToString("dd/MM/yyyy")</p>
                                        @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                }
                                else if (ttdatPhong.Trang_Thai == 1)
                                {
                                    <div class="col-md-4">
                                        <label class="small mb-1">Trả phòng sau ngày</label>
                                        <p style="color:black; background-color:#EEEEEE;" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_TraPhong.Value.ToString("dd/MM/yyyy")</p>
                                        @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                    <div class="col-md-4">
                                        <label class="small mb-1">Thời gian trả phòng</label>
                                        <p style="color: black; background-color: #EEEEEE" type="text" class="form-control">@ttdatPhong.Thoi_Gian_ThanhToan.Value</p>
                                        @*<input hidden name="ngayVe" value="@Convert.ToDateTime(Session["thoigian-ve"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đi')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                }
                            }
                            else if (models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Trang_Thai == 2)
                            {
                                <div class="col-md-4">
                                    <label class="small mb-1">Trả phòng sau ngày</label>
                                    <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_TraPhong.Value.ToString("dd/MM/yyyy")</p>
                                    @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                </div>
                                <div class="col-md-4">
                                    <label class="small mb-1">Thời gian hủy phòng</label>
                                    <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_ThanhToan_Huy.Value</p>
                                    @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                </div>
                            }
                            else if (models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Trang_Thai == 1)
                            {
                                var mattdp = ttdatPhong.Ma_TT_Dat_Phong;
                                var matour = ttdatPhong.Ma_Tour;
                                var landoi = ttdatPhong.Doi_Tra;

                                if (ttdatPhong.Thoi_Gian_ThanhToan.Value.CompareTo(models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_ThanhToan_Huy.Value) == 0)
                                {
                                    <div class="col-md-4">
                                        <label class="small mb-1">Trả phòng sau ngày</label>
                                        <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_TraPhong.Value.ToString("dd/MM/yyyy")</p>
                                        @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                    <div class="col-md-4">
                                        <label class="small mb-1">Thời gian trả phòng</label>
                                        <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_ThanhToan_Huy.Value</p>
                                        @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-4">
                                        <label class="small mb-1">Trả phòng sau ngày</label>
                                        <p style="color:black; background-color:#EEEEEE" class="form-control">@models.TOUR.First(t => t.Ma_Tour.Equals(matours)).Thoi_Gian_TraPhong.Value.ToString("dd/MM/yyyy")</p>
                                        @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                    <div class="col-md-4">
                                        <label class="small mb-1">Thời gian trả phòng</label>
                                        <p style="color:black; background-color:#EEEEEE" class="form-control">@ttdatPhong.Thoi_Gian_ThanhToan.Value</p>
                                        @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                                    </div>
                                }
                            }
                            <div class="col-md-4">
                                <label class="small mb-1">Cần thanh toán</label>
                                <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @((Convert.ToDecimal(Session["tong-thanhtoan"].ToString()) - Convert.ToDecimal(Session["tong-coc"].ToString())).ToString("0,0")) &emsp; VND</p>
                                @*<input type="text" id="testinput" value="@((Convert.ToInt64(Session["tong-coc"]).ToString("0,0")).Replace(".",","))" maxlength="@((Convert.ToDecimal(Session["tong-thanhtoan"])).ToString("0,0").Length)" style="text-align: center; font-weight: bold; color:red" class="form-control" name="tienCoc" required="required" />*@
                            </div>
                        }

                    </div>
                    <br />
                    <hr />
                    <br />
                    @if (string.IsNullOrEmpty(ttdatPhong.Ma_Tour))
                    {
                        <div class="row">
                            <div class="col-sm-3">
                                <p style="font-weight:bold" class="mb-0">Đặt Phòng</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">Đặt @ttdatPhong.Phong.So_Phong vào ngày: @ttdatPhong.Thoi_Gian_Dat,&emsp; Bởi Nhân viên: @ttdatPhong.Tai_Khoan1.Ho_Va_Ten (@ttdatPhong.Tai_Khoan1.Ten_Dang_Nhap)</p>
                            </div>
                        </div>
                        if (ttdatPhong.Doi_Tra >= 1)
                        {
                            if (ttdatPhong.Trang_Thai == 0)
                            {
                                var mattdp = ttdatPhong.Ma_TT_Dat_Phong;
                                var landoi = ttdatPhong.Doi_Tra;
                                var ttdoi = models.TT_Doi_Phong.Where(t => t.Ma_TT_Dat_Phong.Equals(mattdp)).ToList();
                                for (int i = 0; i < ttdoi.Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdatPhong.Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdoi[i - 1].Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                            else if (ttdatPhong.Trang_Thai == 1)
                            {
                                var mattdp = ttdatPhong.Ma_TT_Dat_Phong;
                                var landoi = ttdatPhong.Doi_Tra;
                                var ttdoi = models.TT_Doi_Phong.Where(t => t.Ma_TT_Dat_Phong.Equals(mattdp)).ToList();
                                for (int i = 0; i < ttdoi.Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdatPhong.Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdoi[i - 1].Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                }
                                <div class="row">
                                    <div class="col-sm-3">
                                        <p style="font-weight:bold" class="mb-0">Trả Phòng</p>
                                    </div>
                                    <div class="col-sm-9">
                                        <p class="text-muted mb-0">Trả @ttdoi[ttdoi.Count - 1].Phong.So_Phong vào ngày: @ttdatPhong.Thoi_Gian_ThanhToan.Value,&emsp; Bởi Nhân viên: @ttdatPhong.Tai_Khoan.Ho_Va_Ten (@ttdatPhong.Tai_Khoan.Ten_Dang_Nhap)</p>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            if (ttdatPhong.Trang_Thai == 1)
                            {
                                <div class="row">
                                    <div class="col-sm-3">
                                        <p style="font-weight:bold" class="mb-0">Trả Phòng</p>
                                    </div>
                                    <div class="col-sm-9">
                                        <p class="text-muted mb-0">Trả @ttdatPhong.Phong.So_Phong vào ngày: @ttdatPhong.Thoi_Gian_ThanhToan.Value,&emsp; Bởi Nhân viên: @ttdatPhong.Tai_Khoan.Ho_Va_Ten (@ttdatPhong.Tai_Khoan.Ten_Dang_Nhap)</p>
                                    </div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-sm-3">
                                <p style="font-weight:bold" class="mb-0">Đặt Phòng theo Tour</p>
                            </div>
                            <div class="col-sm-9">
                                <p class="text-muted mb-0">Đặt @ttdatPhong.Phong.So_Phong vào ngày: @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(ttdatPhong.Ma_Tour)).Thoi_Gian_DatPhong_Coc.Value,&emsp; Bởi Nhân viên: @ttdatPhong.Tai_Khoan1.Ho_Va_Ten (@ttdatPhong.Tai_Khoan1.Ten_Dang_Nhap)</p>
                            </div>
                        </div>
                        if (ttdatPhong.Doi_Tra >= 1)
                        {
                            if (ttdatPhong.Trang_Thai == 0)
                            {
                                var mattdp = ttdatPhong.Ma_TT_Dat_Phong;
                                var landoi = ttdatPhong.Doi_Tra;
                                var ttdoi = models.TT_Doi_Phong.Where(t => t.Ma_TT_Dat_Phong.Equals(mattdp)).ToList();
                                for (int i = 0; i < ttdoi.Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdatPhong.Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdoi[i - 1].Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                            else if (ttdatPhong.Trang_Thai == 1)
                            {
                                var mattdp = ttdatPhong.Ma_TT_Dat_Phong;
                                var matour = ttdatPhong.Ma_Tour;
                                var landoi = ttdatPhong.Doi_Tra;
                                var ttdoi = models.TT_Doi_Phong.Where(t => t.Ma_TT_Dat_Phong.Equals(mattdp)).ToList();
                                for (int i = 0; i < ttdoi.Count; i++)
                                {
                                    if (i == 0)
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdatPhong.Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <p style="font-weight:bold" class="mb-0">Đổi Phòng</p>
                                            </div>
                                            <div class="col-sm-9">
                                                <p class="text-muted mb-0">Đổi từ @ttdoi[i - 1].Phong.So_Phong sang @ttdoi[i].Phong.So_Phong vào ngày: @ttdoi[i].TG_Nhan_Phong,&emsp; Bởi Nhân viên: @ttdoi[i].Tai_Khoan.Ho_Va_Ten (@ttdoi[i].Tai_Khoan.Ten_Dang_Nhap)</p>
                                            </div>
                                        </div>
                                    }
                                }
                                if (ttdatPhong.Thoi_Gian_ThanhToan.Value.CompareTo(models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_ThanhToan_Huy.Value) == 0)
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p style="font-weight:bold" class="mb-0">Trả Phòng theo Tour</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">Trả @ttdoi[ttdoi.Count - 1].Phong.So_Phong vào ngày: @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_ThanhToan_Huy.Value, &emsp; Bởi Nhân viên: @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Tai_Khoan.Ho_Va_Ten (@models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Tai_Khoan.Ten_Dang_Nhap)</p>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p style="font-weight:bold" class="mb-0">Trả Phòng</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">Trả @ttdoi[ttdoi.Count - 1].Phong.So_Phong vào ngày: @ttdatPhong.Thoi_Gian_ThanhToan.Value, &emsp; Bởi Nhân viên: @ttdatPhong.Tai_Khoan.Ho_Va_Ten (@ttdatPhong.Tai_Khoan.Ten_Dang_Nhap)</p>
                                        </div>
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            if (ttdatPhong.Trang_Thai == 1)
                            {
                                var mattdp = ttdatPhong.Ma_TT_Dat_Phong;
                                var matour = ttdatPhong.Ma_Tour;
                                if (ttdatPhong.Thoi_Gian_ThanhToan.Value.CompareTo(models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_ThanhToan_Huy.Value) == 0)
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p style="font-weight:bold" class="mb-0">Trả Phòng theo Tour</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">Trả @ttdatPhong.Phong.So_Phong vào ngày: @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_ThanhToan_Huy.Value, &emsp; Bởi Nhân viên: @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Tai_Khoan.Ho_Va_Ten (@models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Tai_Khoan.Ten_Dang_Nhap)</p>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p style="font-weight:bold" class="mb-0">Trả Phòng</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">Trả @ttdatPhong.Phong.So_Phong vào ngày: @ttdatPhong.Thoi_Gian_ThanhToan, &emsp; Bởi Nhân viên:  @ttdatPhong.Tai_Khoan.Ho_Va_Ten (@ttdatPhong.Tai_Khoan.Ten_Dang_Nhap)</p>
                                        </div>
                                    </div>
                                }
                            }
                            else if (ttdatPhong.Trang_Thai == 2)
                            {
                                var matour = ttdatPhong.Ma_Tour;
                                <div class="row">
                                    <div class="col-sm-3">
                                        <p style="font-weight:bold" class="mb-0">Hủy phòng theo Tour</p>
                                    </div>
                                    <div class="col-sm-9">
                                        <p class="text-muted mb-0">Hủy @ttdatPhong.Phong.So_Phong vào ngày: @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_ThanhToan_Huy.Value, &emsp; Bởi Nhân viên:  @models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Tai_Khoan.Ho_Va_Ten (@models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Tai_Khoan.Ten_Dang_Nhap)</p>
                                    </div>
                                </div>
                            }
                        }
                    }
                    <br />
                    @if (ttdatPhong.Trang_Thai == 0)
                    {
                        <hr />
                        <div class="row gx-3 mb-3" style="margin-top: 2rem;">
                            <div style="text-align:center" class="col-md-12">
                                @if ((ttdatPhong.Nguoi_Lon + ttdatPhong.Tre_Em) <= (phong.Loai_Phong.So_Nguoi_Lon + phong.Loai_Phong.So_Tre_Em))
                                {
                                    <a role="button" style="text-align: center; width: 180px; color:white" class="btn btn-search" data-toggle="modal" data-target="#themnguoi"> <i class="fa fa-plus"></i> &ensp; Thêm Người</a>
                                    <span>&emsp;</span>
                                }
                                <a href="@Url.Action("UpdateRentingRooms", "RoomManagement", new { id = ttdatPhong.Ma_TT_Dat_Phong })" role="button" style="text-align: center; width: 180px; color:white" class="btn btn-search"> <i class="fa fa-edit"></i> &ensp; Chỉnh Sửa</a>
                                @*<button style="text-align: center; width: 180px;" type="submit" onclick="if (!confirm('Xác nhận đặt phòng?')) { return false; }" class="btn btn-search">Chỉnh sửa</button>*@

                                @if (string.IsNullOrEmpty(ttdatPhong.Ma_Tour))
                                {

                                    <span>&emsp;</span>
                                    <a onclick="xacnhandoiphong()" role="button" style="text-align: center; width: 180px; color:white" class="btn btn-search"> <i class="fa fa-recycle"></i> &ensp; Đổi Phòng</a>
                                    @*<button style="text-align: center; width: 180px;" type="submit" onclick="if (!confirm('Xác nhận đặt phòng?')) { return false; }" class="btn btn-search">Chỉnh sửa</button>*@
                                    <span>&emsp;</span>

                                    <a style="color: white; width: 180px;" class="btn btn-search" onclick="xacnhanhuybo()" role="button"> <i class="fa fa-credit-card"></i> &ensp;  Trả Phòng </a>

                                    <script>
                                function xacnhanhuybo() {
                                        let info = @Html.Raw(Json.Encode((Convert.ToDecimal(Session["tong-thanhtoan"].ToString()) - Convert.ToDecimal(Session["tong-coc"].ToString())).ToString("0,0")));
                                        cuteAlert({
                                        type: "question",
                                        title: "Thông báo!",
                                        message: "Xác nhận thanh toán " + info + " VND và trả phòng?",
                                        confirmText: "Xác nhận",
                                        cancelText: "Hủy bỏ"
                                        }).then(function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = '@Url.Action("CheckOutRooms", "RoomManagement", new {id = ttdatPhong.Ma_TT_Dat_Phong})';
                                            } else {
                                                return false;
                                            }
                                        });
                                    }

                                    function xacnhandoiphong() {
                                        cuteAlert({
                                        type: "question",
                                        title: "Thông báo!",
                                        message: "Bạn chắc chắn muốn đổi phòng?",
                                        confirmText: "Xác nhận",
                                        cancelText: "Hủy bỏ"
                                        }).then(function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = '@Url.Action("ChangeRooms", "RoomManagement", new {id = ttdatPhong.Ma_TT_Dat_Phong})';
                                            } else {
                                                return false;
                                            }
                                        });
                                    }
                                    </script>

                                }
                                else
                                {
                                    var matour = ttdatPhong.Ma_Tour;
                                    if (Convert.ToDateTime(DateTime.Now.ToString("dd/MM/yyyy")).CompareTo(models.TOUR.FirstOrDefault(t => t.Ma_Tour.Equals(matour)).Thoi_Gian_NhanPhong.Value) >= 0)
                                    {
                                        <span>&emsp;</span>
                                        <a onclick="xacnhandoiphong()" role="button" style="text-align: center; width: 180px; color:white" class="btn btn-search"> <i class="fa fa-recycle"></i> &ensp; Đổi Phòng</a>
                                        @*<button style="text-align: center; width: 180px;" type="submit" onclick="if (!confirm('Xác nhận đặt phòng?')) { return false; }" class="btn btn-search">Chỉnh sửa</button>*@
                                        <span>&emsp;</span>

                                        <a style="color: white; width: 180px;" class="btn btn-search" onclick="xacnhanhuybo()" role="button"> <i class="fa fa-credit-card"></i> &ensp;  Trả Phòng </a>

                                        <script>
                                function xacnhanhuybo() {
                                        let info = @Html.Raw(Json.Encode((Convert.ToDecimal(Session["tong-thanhtoan"].ToString()) - Convert.ToDecimal(Session["tong-coc"].ToString())).ToString("0,0")));
                                        cuteAlert({
                                        type: "question",
                                        title: "Thông báo!",
                                        message: "Xác nhận thanh toán " + info + " VND và trả phòng?",
                                        confirmText: "Xác nhận",
                                        cancelText: "Hủy bỏ"
                                        }).then(function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = '@Url.Action("CheckOutRooms", "RoomManagement", new {id = ttdatPhong.Ma_TT_Dat_Phong})';
                                            } else {
                                                return false;
                                            }
                                        });
                                    }

                                    function xacnhandoiphong() {
                                        cuteAlert({
                                        type: "question",
                                        title: "Thông báo!",
                                        message: "Bạn chắc chắn muốn đổi phòng?",
                                        confirmText: "Xác nhận",
                                        cancelText: "Hủy bỏ"
                                        }).then(function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = '@Url.Action("ChangeRooms", "RoomManagement", new {id = ttdatPhong.Ma_TT_Dat_Phong})';
                                            } else {
                                                return false;
                                            }
                                        });
                                    }
                                        </script>
                                    }

                                }

                            </div>
                        </div>
                        <br />
                    }
                </div>
            </div>
        </div>
    </div>
    <hr />
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <p style="text-align:center; font-weight:bold; font-size:16px; color: orangered;">THÔNG TIN NGƯỜI ĐẶT PHÒNG</p>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-4">
                            <label class="small mb-1">Họ tên</label>
                            <p style="background-color: #EEEEEE" class="form-control">@ttdatPhong.Ho_Ten_KH</p>
                            @*<input type="text" class="form-control" name="hoten" pattern="[a-zA-Z]{1, 30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào họ tên người trụ trì Tour với tối đa 30 ký tự')" oninput="this.setCustomValidity('')" />*@
                        </div>
                        <div class="col-md-4">
                            <label class="small mb-1">CMND/CCCD</label>
                            <p style="background-color: #EEEEEE" class="form-control">@ttdatPhong.CMND_CCCD_KH</p>
                            @*<input type="text" class="form-control" name="cmndcccd" pattern="[1-9]{9, 12}" required="required" oninvalid="this.setCustomValidity('Hãy nhập số CMND/CCCD của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                        </div>
                        <div class="col-md-4">
                            <label class="small mb-1">Số điện thoại</label>
                            <p style="background-color: #EEEEEE" class="form-control">@ttdatPhong.SDT_KH</p>
                            @*<input type="text" class="form-control" name="sdt" pattern="[0-9]{10}" required="required" oninvalid="this.setCustomValidity('Hãy nhập số điện thoại của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                        </div>
                    </div>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-4">
                            <div>
                                <label class="small mb-1">Ngày sinh</label>
                                <p style="background-color: #EEEEEE" class="form-control">@ttdatPhong.Sinh_Nhat_KH.ToString("dd/MM/yyyy")</p>
                                @*<input type="date" class="form-control" name="ngaysinh" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày sinh của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                            </div>
                            <div style="margin-top: -0.4rem">
                                <label class="small mb-1">Giới tính</label>
                                @if (ttdatPhong.Gioi_Tinh_KH == 0)
                                {
                                    <p style="background-color: #EEEEEE" class="form-control">Nữ</p>
                                }
                                else if (ttdatPhong.Gioi_Tinh_KH == 1)
                                {
                                    <p style="background-color: #EEEEEE" class="form-control">Nam</p>
                                }
                                else
                                {
                                    <p style="background-color: #EEEEEE" class="form-control">Khác</p>
                                }
                                @*@Html.DropDownList("gioiTinh", (IEnumerable<SelectListItem>)ViewBag.Gioi_Tinh, null, new { @class = "form-control", @required = "required", @oninvalid = "this.setCustomValidity('Giới tính không được bỏ trống')", @oninput = "this.setCustomValidity('')" })*@
                            </div>
                        </div>
                        <div class="col-md-8">
                            <label class="small mb-1">Địa chỉ</label>
                            <textarea readonly rows="5" style="background-color: #EEEEEE" class="form-control">@ttdatPhong.Dia_Chi_KH</textarea>
                            @*@Html.TextAreaFor(m => ttdatPhong.Dia_Chi_KH, new { @class = "form-control", @rows = "7" })*@
                            @*<textarea rows="6" class="form-control" name="diachi" pattern=".{1,200}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào địa chỉ của người trụ trì Tour với tối đa 200 ký tự')" oninput="this.setCustomValidity('')"></textarea>*@
                        </div>
                    </div>

                    @for (int i = 0; i < Model.Count; i++)
                    {

                        Html.HiddenFor(m => m[i].Ma_Nhan_Than);
                        Html.HiddenFor(m => m[i].Ho_Ten);
                        Html.HiddenFor(m => m[i].CMND_CCCD);
                        Html.HiddenFor(m => m[i].Sinh_Nhat);
                        Html.HiddenFor(m => m[i].Gioi_Tinh);
                        Html.HiddenFor(m => m[i].Dia_Chi);
                        Html.HiddenFor(m => m[i].Moi_Quan_He);
                        Html.HiddenFor(m => m[i].Ma_TT_Dat_Phong);

                        <br />
                        <hr />
                        <p style="text-align:center; font-weight:bold; font-size:16px; color: orangered;">THÔNG TIN KHÁCH HÀNG THỨ @(2 + i) </p>
                        <div class="row gx-3 mb-3">
                            <div class="col-md-4">
                                <label class="small mb-1">Họ tên</label>
                                @*<input type="text" class="form-control" name="Ho_Ten" pattern="[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào họ tên người trụ trì Tour với tối đa 30 ký tự')" oninput="this.setCustomValidity('')" />*@
                                <p style="background-color: #EEEEEE" class="form-control">@Model[i].Ho_Ten</p>
                                @*@Html.EditorFor(model => Model[i].Ho_Ten, new { htmlAttributes = new { @class = "form-control", @required = "required", pattern = "[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}", @oninvalid = "this.setCustomValidity('Hãy nhập đầy đủ họ và tên')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].Ho_Ten, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-4">
                                <label class="small mb-1">CMND/CCCD</label>
                                @*<input type="text" class="form-control" name="CMND_CCCD" pattern="[1-9]{9, 12}" required="required" oninvalid="this.setCustomValidity('Hãy nhập số CMND/CCCD của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                                @if (string.IsNullOrEmpty(Model[i].CMND_CCCD))
                                {
                                    <p style="background-color: #EEEEEE; color: darkgray" class="form-control">Không có</p>
                                }
                                else
                                {
                                    <p style="background-color: #EEEEEE" class="form-control">@Model[i].CMND_CCCD</p>
                                }
                                @*@Html.EditorFor(model => Model[i].CMND_CCCD, new { htmlAttributes = new { @class = "form-control", @placeholder = "Số CMND/CCCD", @maxlength = "12", @oninvalid = "this.setCustomValidity('Hãy nhập vào đúng số CMND/CCCD của bạn')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].CMND_CCCD, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-4">
                                <label class="small mb-1">Mối quan hệ</label>
                                @*<input type="text" class="form-control" name="Moi_Quan_He" pattern="[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập số mối quan hệ đối với của người đại diện')" oninput="this.setCustomValidity('')" />*@
                                <p style="background-color: #EEEEEE" class="form-control">@Model[i].Moi_Quan_He</p>
                                @*@Html.EditorFor(model => Model[i].Moi_Quan_He, new { htmlAttributes = new { @class = "form-control", @required = "required", pattern = "[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}", @oninvalid = "this.setCustomValidity('Hãy nhập mối quan hệ với người đại diện')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].Moi_Quan_He, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="row gx-3 mb-3">
                            <div class="col-md-4">
                                <div>
                                    <label class="small mb-1">Ngày sinh</label>
                                    <p style="background-color: #EEEEEE" class="form-control">@Model[i].Sinh_Nhat.ToString("dd/MM/yyyy")</p>
                                    @*<input type="date" class="form-control" name="ngaysinh" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày sinh của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                                </div>
                                <div style="margin-top: -0.4rem">
                                    <label class="small mb-1">Giới tính</label>
                                    @if (@Model[i].Gioi_Tinh == 0)
                                    {
                                        <p style="background-color: #EEEEEE" class="form-control">Nữ</p>
                                    }
                                    else if (@Model[i].Gioi_Tinh == 1)
                                    {
                                        <p style="background-color: #EEEEEE" class="form-control">Nam</p>
                                    }
                                    else
                                    {
                                        <p style="background-color: #EEEEEE" class="form-control">Khác</p>
                                    }
                                    @*@Html.DropDownListFor(model => Model[i].Gioi_Tinh, ViewBag.Gioi_Tinh as IEnumerable<SelectListItem>, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="col-md-8">
                                <label class="small mb-1">Địa chỉ</label>
                                @*<textarea rows="6" class="form-control" name="Dia_Chi" pattern=".{1,200}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào địa chỉ của người trụ trì Tour với tối đa 200 ký tự')" oninput="this.setCustomValidity('')"></textarea>*@
                                <textarea readonly rows="5" style="background-color: #EEEEEE" class="form-control">@Model[i].Dia_Chi</textarea>
                                @*@Html.EditorFor(model => Model[i].Dia_Chi, new { type = "textarea", row = "5", htmlAttributes = new { @class = "form-control", placeholder = "Địa chỉ nhà", @rows = "5", @maxlength = "200", @oninvalid = "this.setCustomValidity('Địa chỉ tối đa 200 ký tự')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].Dia_Chi, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    }
                </div>
                <br>
            </div>
        </div>
    </div>

    <div class="modal fade" id="themnguoi" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header no-bd">
                    <h5 class="modal-title">
                        <span class="fw-mediumbold">
                            Thông Tin Đặt Phòng
                        </span>
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <form action="@Url.Action("AddMember", "RoomManagement")" method="post">
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group form-group-default">
                                    <label>họ & Tên</label>
                                    <input type="text" class="form-control" name="hoten" pattern="[a-zA-Z]{1, 30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào họ và tên với tối đa 30 ký tự')" oninput="this.setCustomValidity('')" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-body" style="margin-top: -1.7rem; ">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group form-group-default">
                                    <label>CMND/CCCD</label>
                                    <input type="text" class="form-control" name="cmndcccd" pattern="[1-9]{,12}" maxlength="12" oninvalid="this.setCustomValidity('Hãy nhập đúng số CMND/CCCD')" oninput="this.setCustomValidity('')" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group form-group-default">
                                    <label>Mối quan hệ</label>
                                    <input type="text" class="form-control" name="moiquanhe" pattern="[a-zA-Z]{1, 30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập mối quan hệ với người đặt phòng, tối đa 30 ký tự')" oninput="this.setCustomValidity('')" />
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="modal-body" style="margin-top: -1.7rem; ">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group form-group-default">
                                    <label>Ngày sinh</label>
                                    <input type="date" class="form-control" name="ngaysinh" required="required" oninvalid="this.setCustomValidity('Hãy nhập ngày sinh')" oninput="this.setCustomValidity('')" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group form-group-default">
                                    <label>Giới tính</label>
                                    @Html.DropDownList("gioiTinh", ViewBag.Gioi_Tinh as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-body" style="margin-top: -1.7rem;">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group form-group-default">
                                    <label>Địa chỉ</label>
                                    <textarea rows="4" class="form-control" name="diachi" pattern=".{1,200}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào địa chỉ với tối đa 200 ký tự')" oninput="this.setCustomValidity('')"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="text-align:center;" class="modal-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <input type="text" name="mattdatphong" hidden value="@ttdatPhong.Ma_TT_Dat_Phong" />
                                <button style="text-align: center; color: white; width: 150px" type="submit" class="btn btn-search" onclick="if (!confirm('Thêm người?')) { return false; } ">Thêm</button>
                                &ensp;
                                <a role="button" style="text-align: center; color: white; width: 150px" class="btn btn-danger" data-dismiss="modal" aria-label="Close">Hủy</a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>



</div>

<script>
    $("#testinput").on("keydown", function (e) {
        var keycode = (event.which) ? event.which : event.keyCode;
        if (e.shiftKey == true || e.ctrlKey == true) return false;
        if ([8, 110, 39, 37, 46].indexOf(keycode) >= 0 || // allow tab, dot, left and right arrows, delete keys
            (keycode == 190 && this.value.indexOf('.') === -1) || // allow dot if not exists in the value
            (keycode == 110 && this.value.indexOf('.') === -1) || // allow dot if not exists in the value
            (keycode >= 48 && keycode <= 57) || // allow numbers
            (keycode >= 96 && keycode <= 105)) { // allow numpad numbers
            // check for the decimals after dot and prevent any digits
            var parts = this.value.split('.');
            if (parts.length > 1 && // has decimals
                parts[1].length >= 2 && // should limit this
                (
                    (keycode >= 48 && keycode <= 57) || (keycode >= 96 && keycode <= 105)
                ) // requested key is a digit
            ) {
                return false;
            } else {
                if (keycode == 110) {
                    this.value += ".";
                    return false;
                }
                return true;
            }
        } else {
            return false;
        }
    }).on("keyup", function () {
        var parts = this.value.split('.');
        parts[0] = parts[0].replace(/,/g, '').replace(/^0+/g, '');
        if (parts[0] == "") parts[0] = "0";
        var calculated = parts[0].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
        if (parts.length >= 2) calculated += "." + parts[1].substring(0, 2);
        this.value = calculated;
        if (this.value == "NaN" || this.value == "") this.value = 0;
    });
</script>
