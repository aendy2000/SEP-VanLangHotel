@model List<SEP_VanLangHotel.Models.Nhan_Than>
@using SEP_VanLangHotel.Models;
@{ SEP25Team09Entities models = new SEP25Team09Entities();
    var phong = Session["thongtinphong"] as Phong;
    var ttdatPhong = Session["thongtindatphong"] as TT_Dat_Phong;

    var maLoaiPhong = phong.Ma_Loai_Phong;
    var dsTienIch = models.DS_Tien_Ich.Where(t => t.Ma_Loai_Phong.Equals(maLoaiPhong)).ToList();
    string dsTienIchs = "";
    foreach (var item in phong.Loai_Phong.DS_Tien_Ich)
    {
        dsTienIchs += item.Tien_Ich.Ten_Tien_Ich + "; ";
    }
}
@{
    ViewBag.Title = "UpdateRentingRooms";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!Session["error-import-file"].Equals("empthy"))
{
    <body onload="kiemtrafileimport()">
    </body>
    <script>
        let info = @Html.Raw(Json.Encode(Session["error-import-file"]));
        function kiemtrafileimport() {
            cuteAlert({
                type: "error",
                title: "Thông báo!",
                message: info,
                buttonText: "Xác nhận"
            })
        }
    </script>
    Session["error-import-file"] = "empthy";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<div class="panel-header bg-primary-gradient">
    <div class="page-inner py-5">
        <div class="d-flex align-items-left align-items-md-center flex-column flex-md-row">
            <div>
                <h2 class="text-white pb-2 fw-bold">THÔNG TIN ĐẶT PHÒNG</h2>
            </div>
        </div>
    </div>
</div>

<div class="page-inner mt--5">
    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body text-center">
                    <p style="width: 100%; font-style: italic ">Phòng đang @phong.Trang_Thai.Ten_Trang_Thai </p>

                    <img src="https://cdn.yeudulich.com/media/cms/f2/dd/3943-dc57-4832-ab7c-3c23dce3e5ea.jpg" alt="avatar"
                         style="border-radius:3%; width:100%" class="img-room-profile mb-2">
                    <p></p>
                    <h2 class="btn btn-danger" style="font-weight:bold; width:100%"> @phong.So_Phong </h2>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Loại Phòng</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.Ten_Loai_Phong</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Giá</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.Gia.ToString("0,0") VND</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Chứa Tối Đa</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@(phong.Loai_Phong.So_Nguoi_Lon + phong.Loai_Phong.So_Tre_Em) người</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Số Giường</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.So_Giuong giường</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Tiện ích</p>
                        </div>
                        <div class="col-sm-9">

                            <p class="text-muted mb-0">@dsTienIchs.Substring(0, (dsTienIchs.Length - 2))</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p style="font-weight:bold" class="mb-0">Mô Tả</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">@phong.Loai_Phong.Mo_Ta</p>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <hr />
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <p style="text-align:center; font-weight:bold; font-size:16px; color: orangered;">THÔNG TIN ĐẶT PHÒNG VÀ THANH TOÁN</p>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-4">
                            <label class="small mb-1">Ở từ ngày</label>
                            <p style="color:black; background-color:#EEEEEE" class="form-control">@Convert.ToDateTime(Session["thoigian-den"]).ToString("dd/MM/yyyy")</p>
                            @*<input hidden name="ngayDen" value="@Convert.ToDateTime(Session["thoigian-den"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đến')" oninput="this.setCustomValidity('')">*@
                        </div>

                        <div class="col-md-4">
                            <label class="small mb-1">Người lớn</label>
                            <p style="color: black; background-color: #EEEEEE" min="1" max="4" class="form-control">@Session["songuoi-lon"] người</p>
                            @*<input hidden name="soNguoiLon" value="@Session["songuoi-lon"]" style="color:black" type="number" min="1" max="4" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy nhập số lượng người lớn tối đa 4 người')" oninput="this.setCustomValidity('')">*@
                        </div>
                        <div class="col-md-4">
                            <label class="small mb-1">Tổng thanh toán</label>
                            <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @phong.Loai_Phong.Gia.ToString("0,0") &ensp;×&ensp; @(Convert.ToDecimal(Convert.ToDateTime(Session["thoigian-ve"].ToString()).Subtract(Convert.ToDateTime(Session["thoigian-den"].ToString())).TotalDays + 1)) &ensp;ngày&ensp; = &ensp; @(Convert.ToDecimal(Session["tong-thanhtoan"].ToString()).ToString("0,0")) &emsp; VND</p>
                            @*<input name="tongtien" type="text" class="hidden" hidden="hidden" value="@(Convert.ToDecimal(Session["tong-thanhtoan"].ToString()).ToString("0,0"))" />*@
                        </div>

                    </div>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-4">
                            <label class="small mb-1">Đến hết ngày</label>
                            <p style="color: black; background-color: #EEEEEE" type="text" class="form-control">@Convert.ToDateTime(Session["thoigian-ve"]).ToString("dd/MM/yyyy")</p>
                            @*<input hidden name="ngayVe" value="@Convert.ToDateTime(Session["thoigian-ve"]).ToString("yyyy-MM-dd")" style="color:black" type="date" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày đi')" oninput="this.setCustomValidity('')">*@
                        </div>
                        <div class="col-md-4">
                            <label class="small mb-1">Trẻ em (dưới 14 tuổi)</label>
                            <p style="color: black; background-color: #EEEEEE" min="0" max="4" class="form-control">@Session["songuoi-treem"] người</p>
                            @*<input hidden name="soTreEm" value="@Session["songuoi-treem"]" style="color:black" type="number" min="0" max="4" class="form-control" required="required" oninvalid="this.setCustomValidity('Hãy nhập số lượng trẻ em tối đa 4 người')" oninput="this.setCustomValidity('')">*@
                        </div>
                        <div class="col-md-4">
                            <label class="small mb-1">Số tiền cọc</label>
                            <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @((Convert.ToInt64(Session["tong-coc"]).ToString("0,0"))) &emsp; VND</p>
                            @*<input type="text" id="testinput" value="@((Convert.ToInt64(Session["tong-coc"]).ToString("0,0")).Replace(".",","))" maxlength="@((Convert.ToDecimal(Session["tong-thanhtoan"])).ToString("0,0").Length)" style="text-align: center; font-weight: bold; color:red" class="form-control" name="tienCoc" required="required" />*@
                        </div>
                    </div>
                    <div class="row gx-3 mb-3">
                        <div class="col-md-12">
                            <label class="small mb-1">Cần thanh toán</label>
                            <p type="text" style="text-align: center; color: red; font-weight: bold; background-color: #EEEEEE" class="form-control"> @((Convert.ToDecimal(Session["tong-thanhtoan"].ToString()) - Convert.ToDecimal(Session["tong-coc"].ToString())).ToString("0,0")) &emsp; VND</p>
                            @*<input type="text" id="testinput" value="@((Convert.ToInt64(Session["tong-coc"]).ToString("0,0")).Replace(".",","))" maxlength="@((Convert.ToDecimal(Session["tong-thanhtoan"])).ToString("0,0").Length)" style="text-align: center; font-weight: bold; color:red" class="form-control" name="tienCoc" required="required" />*@
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
    </div>
    <hr />
    <br />
    @using (Html.BeginForm("UpdateRentingRooms", "RoomManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <p style="text-align:center; font-weight:bold; font-size:16px; color: orangered;">THÔNG TIN NGƯỜI ĐẶT PHÒNG</p>
                        <div class="row gx-3 mb-3">
                            <div class="col-md-4">
                                <label class="small mb-1">Họ tên</label>
                                <input value="@ttdatPhong.Ma_TT_Dat_Phong" name="maTTDatPhong" hidden />
                                <input value="@ttdatPhong.Ho_Ten_KH" type="text" class="form-control" name="hoten" pattern="[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào họ tên người đặt phòng với tối đa 30 ký tự')" oninput="this.setCustomValidity('')" />
                            </div>
                            <div class="col-md-4">
                                <label class="small mb-1">CMND/CCCD</label>
                                <input value="@ttdatPhong.CMND_CCCD_KH" type="text" class="form-control" name="cmndcccd" required="required" pattern="[0-9]{9,12}" oninvalid="this.setCustomValidity('Hãy nhập đúng số CMND/CCCD của người đặt phòng')" oninput="this.setCustomValidity('')" />
                            </div>
                            <div class="col-md-4">
                                <label class="small mb-1">Số điện thoại</label>
                                <input value="@ttdatPhong.SDT_KH" type="text" class="form-control" name="sdt" pattern="[0-9]{10}" required="required" oninvalid="this.setCustomValidity('Hãy nhập đúng số điện thoại của người đặt phòng')" oninput="this.setCustomValidity('')" />
                            </div>
                        </div>
                        <div class="row gx-3 mb-3">
                            <div class="col-md-4">
                                <div>
                                    <label class="small mb-1">Ngày sinh</label>
                                    <input value="@ttdatPhong.Sinh_Nhat_KH.ToString("yyyy-MM-dd")" type="date" class="form-control" name="ngaysinh" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày sinh của người đặt phòng')" oninput="this.setCustomValidity('')" />
                                </div>
                                <div style="margin-top: -0.4rem">
                                    <label class="small mb-1">Giới tính</label>
                                    @if (ttdatPhong.Gioi_Tinh_KH == 0)
                                    {
                                        @Html.DropDownList("gioiTinh", ViewBag.Gioi_TinhNu as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                    }
                                    else if (ttdatPhong.Gioi_Tinh_KH == 1)
                                    {
                                        @Html.DropDownList("gioiTinh", ViewBag.Gioi_TinhNam as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("gioiTinh", ViewBag.Gioi_TinhKhac as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                    }
                                    @*@Html.DropDownList("gioiTinh", (IEnumerable<SelectListItem>)ViewBag.Gioi_Tinh, null, new { @class = "form-control", @required = "required", @oninvalid = "this.setCustomValidity('Giới tính không được bỏ trống')", @oninput = "this.setCustomValidity('')" })*@
                                </div>
                            </div>
                            <div class="col-md-8">
                                <label class="small mb-1">Địa chỉ</label>
                                @*<textarea rows="7" style="background-color: #EEEEEE" class="form-control">@ttdatPhong.Dia_Chi_KH</textarea>*@
                                @*@Html.TextAreaFor(m => ttdatPhong.Dia_Chi_KH, new { @class = "form-control", @rows = "7" })*@
                                <textarea rows="5" class="form-control" name="diachi" pattern=".{1,200}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào địa chỉ của người trụ trì Tour với tối đa 200 ký tự')" oninput="this.setCustomValidity('')">@ttdatPhong.Dia_Chi_KH</textarea>
                            </div>
                        </div>

                        @for (int i = 0; i < Model.Count; i++)
                        {
                            @Html.HiddenFor(model => Model[i].Ma_Nhan_Than);
                            @Html.HiddenFor(model => Model[i].Ma_TT_Dat_Phong);
                            <br />
                            <hr />
                            <p style="text-align:center; font-weight:bold; font-size:16px; color: orangered;">THÔNG TIN KHÁCH HÀNG THỨ @(2 + i) </p>
                            <div class="row gx-3 mb-3">
                                <div class="col-md-4">
                                    <label class="small mb-1">Họ tên</label>
                                    @*<input type="text" class="form-control" name="Ho_Ten" pattern="[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào họ tên người trụ trì Tour với tối đa 30 ký tự')" oninput="this.setCustomValidity('')" />*@
                                    @*<p style="background-color: #EEEEEE" class="form-control">@Model[i].Ho_Ten</p>*@
                                    @Html.EditorFor(model => Model[i].Ho_Ten, new { htmlAttributes = new { @class = "form-control", @required = "required", pattern = "[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}", @oninvalid = "this.setCustomValidity('Hãy nhập đầy đủ họ và tên')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].Ho_Ten, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                    <label class="small mb-1">CMND/CCCD</label>
                                    @*<input type="text" class="form-control" name="CMND_CCCD" pattern="[1-9]{9, 12}" required="required" oninvalid="this.setCustomValidity('Hãy nhập số CMND/CCCD của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                                    @*@if (string.IsNullOrEmpty(Model[i].CMND_CCCD))
                    {
                        <p style="background-color: #EEEEEE; color: darkgray" class="form-control">Không có</p>
                    }
                    else
                    {
                        <p style="background-color: #EEEEEE" class="form-control">@Model[i].CMND_CCCD</p>
                    }*@
                                    @Html.EditorFor(model => Model[i].CMND_CCCD, new { htmlAttributes = new { @class = "form-control", @placeholder = "Số CMND/CCCD", pattern = "[0-9]{0,12}", @oninvalid = "this.setCustomValidity('Hãy nhập vào đúng số CMND/CCCD của bạn')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].CMND_CCCD, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                    <label class="small mb-1">Mối quan hệ</label>
                                    @*<input type="text" class="form-control" name="Moi_Quan_He" pattern="[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}" required="required" oninvalid="this.setCustomValidity('Hãy nhập số mối quan hệ đối với của người đại diện')" oninput="this.setCustomValidity('')" />*@
                                    @*<p style="background-color: #EEEEEE" class="form-control">@Model[i].Moi_Quan_He</p>*@
                                    @Html.EditorFor(model => Model[i].Moi_Quan_He, new { htmlAttributes = new { @class = "form-control", @required = "required", pattern = "[aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ ]{1,30}", @oninvalid = "this.setCustomValidity('Hãy nhập mối quan hệ với người đại diện')", @oninput = "this.setCustomValidity('')" } })
                                    @Html.ValidationMessageFor(model => Model[i].Moi_Quan_He, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row gx-3 mb-3">
                                <div class="col-md-4">
                                    <div>
                                        <label class="small mb-1">Ngày sinh</label>
                                        @*<p style="background-color: #EEEEEE" class="form-control">@Model[i].Sinh_Nhat.ToString("dd/MM/yyyy")</p>*@
                                        @Html.TextBoxFor(model => Model[i].Sinh_Nhat, new { @class = "form-control", @required = "required", type = "date", @Value = Model[i].Sinh_Nhat.ToString("yyyy-MM-dd"), @oninvalid = "this.setCustomValidity('Hãy nhập ngày sinh')", @oninput = "this.setCustomValidity('')" })
                                        @Html.ValidationMessageFor(model => Model[i].Sinh_Nhat, "", new { @class = "text-danger" })
                                        @*<input type="date" class="form-control" name="ngaysinh" required="required" oninvalid="this.setCustomValidity('Hãy chọn ngày sinh của người trụ trì Tour')" oninput="this.setCustomValidity('')" />*@
                                    </div>
                                    <div style="margin-top: -0.4rem">
                                        <label class="small mb-1">Giới tính</label>
                                        @if (@Model[i].Gioi_Tinh == 0)
                                        {
                                            @Html.DropDownListFor(model => Model[i].Gioi_Tinh_Name, ViewBag.Gioi_TinhNu as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                        }
                                        else if (@Model[i].Gioi_Tinh == 1)
                                        {
                                            @Html.DropDownListFor(model => Model[i].Gioi_Tinh_Name, ViewBag.Gioi_TinhNam as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => Model[i].Gioi_Tinh_Name, ViewBag.Gioi_TinhKhac as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                        }
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <label class="small mb-1">Địa chỉ</label>
                                    @*<textarea rows="6" class="form-control" name="Dia_Chi" pattern=".{1,200}" required="required" oninvalid="this.setCustomValidity('Hãy nhập vào địa chỉ của người trụ trì Tour với tối đa 200 ký tự')" oninput="this.setCustomValidity('')"></textarea>*@
                                    @*<textarea readonly rows="7" style="background-color: #EEEEEE" class="form-control">@Model[i].Dia_Chi</textarea>*@
                                    @Html.TextAreaFor(model => Model[i].Dia_Chi, new { placeholder = "Địa chỉ nhà", @rows = "5", @maxlength = "200", @oninvalid = "this.setCustomValidity('Địa chỉ tối đa 200 ký tự')", @oninput = "this.setCustomValidity('')", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => Model[i].Dia_Chi, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        <br />
                        <hr />
                        <div class="row gx-3 mb-3" style="margin-top:1.7rem">
                            <div style="text-align:center" class="col-md-12">
                                <button style="text-align: center; width: 180px;" type="submit" onclick="if (!confirm('Xác nhận lưu chỉnh sửa?')) { return false; }" class="btn btn-search">Lưu</button>
                                &emsp;
                                <a role="button" style="text-align: center; width: 180px; color:white" class="btn btn-danger" onclick="xacnhanhuybo()"> Hủy</a>
                                <script>
                                    function xacnhanhuybo() {
                                        cuteAlert({
                                            type: "question",
                                            title: "Thông báo!",
                                            message: "Xác nhận hủy bỏ thay đổi?",
                                            confirmText: "Xác nhận",
                                            cancelText: "Không hủy"
                                        }).then(function (isConfirm) {
                                            if (isConfirm) {
                                                window.location.href = '@Url.Action("DetailtRentingRooms", "RoomManagement", new {id = ttdatPhong.Ma_TT_Dat_Phong})';
                                            } else {
                                                return false;
                                            }
                                        });
                                    }
                                </script>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    $("#testinput").on("keydown", function (e) {
        var keycode = (event.which) ? event.which : event.keyCode;
        if (e.shiftKey == true || e.ctrlKey == true) return false;
        if ([8, 110, 39, 37, 46].indexOf(keycode) >= 0 || // allow tab, dot, left and right arrows, delete keys
            (keycode == 190 && this.value.indexOf('.') === -1) || // allow dot if not exists in the value
            (keycode == 110 && this.value.indexOf('.') === -1) || // allow dot if not exists in the value
            (keycode >= 48 && keycode <= 57) || // allow numbers
            (keycode >= 96 && keycode <= 105)) { // allow numpad numbers
            // check for the decimals after dot and prevent any digits
            var parts = this.value.split('.');
            if (parts.length > 1 && // has decimals
                parts[1].length >= 2 && // should limit this
                (
                    (keycode >= 48 && keycode <= 57) || (keycode >= 96 && keycode <= 105)
                ) // requested key is a digit
            ) {
                return false;
            } else {
                if (keycode == 110) {
                    this.value += ".";
                    return false;
                }
                return true;
            }
        } else {
            return false;
        }
    }).on("keyup", function () {
        var parts = this.value.split('.');
        parts[0] = parts[0].replace(/,/g, '').replace(/^0+/g, '');
        if (parts[0] == "") parts[0] = "0";
        var calculated = parts[0].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
        if (parts.length >= 2) calculated += "." + parts[1].substring(0, 2);
        this.value = calculated;
        if (this.value == "NaN" || this.value == "") this.value = 0;
    });
</script>


